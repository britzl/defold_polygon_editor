
local util = require "main.framework.utilities"
local input = require "main.framework.input_globals"

local line_opacity = 0.1
local label_color = vmath.vector4(0.4, 0.4, 0.4, 1)
local labels = {"labels#x", "labels#x_coord", "labels#y", "labels#y_coord" }


--########################################  Init  ########################################
function init(self)
	self.pos = go.get_position()
	go.set("linex#sprite", "tint.w", line_opacity)
	go.set("liney#sprite", "tint.w", line_opacity)
	go.set("liney#sprite", "scale", vmath.vector3(0.5, 250, 1))
	go.set("linex#sprite", "scale", vmath.vector3(0.5, 250, 1))
	for i, v in ipairs(labels) do go.set(v, "color", label_color) end
	go.set_scale(input.zoom, "labels")
end

--########################################  On Message  ########################################
function on_message(self, message_id, message, sender)
	if message_id == hash("update pos") then
		self.pos = message.pos
		go.set_position(self.pos)
		label.set_text("labels#x_coord", util.round(self.pos.x * 100)/100)
		label.set_text("labels#y_coord", util.round(self.pos.y * 100)/100)
	elseif message_id == hash("window resized") then
		go.set("liney#sprite", "scale.y", message.size.x * 2)
		go.set("linex#sprite", "scale.y", message.size.y * 2)
	elseif message_id == hash("zoom") then
		go.set_scale(input.zoom, "labels")
	end
end
